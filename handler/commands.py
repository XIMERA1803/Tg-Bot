import time
import random

from pyexpat.errors import messages

from keyboards.inline import reply_key
from enum import global_enum
from mailbox import Message
from turtledemo.penrose import start
from aiogram import Router, types
from aiogram.filters import Command
from aiogram import F
from aiogram.types import FSInputFile
from aiogram.types import ReplyKeyboardRemove
from keyboards.inline import reply_kb
from handler.callback import callbacks_router
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.fsm.state import State , StatesGroup
#from BD import logger
#from BD import get_note_by_id
from BD import cursor
from BD import load_user, save_user

command_router = Router()
fsm_router = Router()

fishing_bait = {2 : 50, 3 : 200 , 4 : 600 , 5 : 800}
fishing_rod = {2 : 100 , 3 : 300 , 4 : 500 , 5 : 1000}
listok = ['–∫–∏–ª—å–∫–∞', '–ø–ª–æ—Ç–≤–∞', '–∫–∞—Ä–∞—Å—å']
cena = {"–∫–∏–ª—å–∫–∞": 1, "–ø–ª–æ—Ç–≤–∞" : 3, "–∫–∞—Ä–∞—Å—å" : 5, "—â—É–∫–∞" : 7, "—Å–æ–º" : 10, '—Å–µ–º–≥–∞' : 15 ,"—Ç—É–Ω–µ—Ü" : 20 }
money = 0
lvl_fishing_rod = 1
lvl_fishing_bait = 1

user_data = {}

def get_user_data(user_id):
    if user_id not in user_data:
        data = load_user(user_id)
        if data:
            money, lvl_rod, lvl_bait = data
        else:
            money, lvl_rod, lvl_bait = 0, 1, 1
            save_user(user_id, money, lvl_rod, lvl_bait)
        user_data[user_id] = {'money': money, 'lvl_rod': lvl_rod, 'lvl_bait': lvl_bait}
    return user_data[user_id]

def update_user_data(user_id):
    data = user_data[user_id]
    save_user(user_id, data['money'], data['lvl_rod'], data['lvl_bait'])

@command_router.message(Command("start"))
async def start(message:  types.Message):
    user_id = message.from_user.id
    get_user_data(user_id)
    await message.answer("–ø—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –≤ –∫–æ—Ç–æ—Ä–æ–º —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–±—ã—Ç—å —Ä—ã–±–∞–∫–æ–º! \n–û–±–Ω–æ–≤–ª—è–π —É–¥–æ—á–∫–∏ —á—Ç–æ –±—ã —É–º–µ–Ω—å—à–∏—Ç—å —à–∞–Ω—Å —Å—Ä—ã–≤–∞–Ω–∏—è —Ä—ã–±—ã —Å –∫—Ä—é—á–∫–∞\n –û–±–Ω–æ–≤–ª—è–π –ø—Ä–∏–º–∞–Ω–∫–∏ —á—Ç–æ –±—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–µ —Ä—ã–±—ã")
    await message.answer("–≤—ã–±–∏—Ä–∞–π—Ç–µ:", reply_markup=reply_kb)

@command_router.message(F.text == "–∑–∞–∫–∏–Ω—É—Ç—å —É–¥–æ—á–∫—É")
async def fishing(message:  types.Message):
    user_id = message.from_user.id
    data = get_user_data(user_id)
    a = (random.choice(listok))
    chance = random.randint(0, 100)
    a1 = cena[a]
    await message.answer("–ø—Ä–æ—Ü–µ—Å—Å...", reply_markup=ReplyKeyboardRemove())
    time.sleep(3)
    lvl_fishing_rod = data['lvl_rod']
    if lvl_fishing_rod == 1:
        if chance > 40:
            data['money'] += a1
            update_user_data(user_id)
            await message.answer(f"—Ç—ã –ø–æ–π–º–∞–ª —Ä—ã–±—É {a}, –∑–∞ –Ω–µ–µ —Ç—ã –ø–æ–ª—É—á–∏—à—å - {a1} –º–æ–Ω–µ—Ç . –¢–≤–æ–π –±–∞–ª–∞–Ω—Å - {data['money']} ", reply_markup=reply_kb)
            await message.answer(f"üòä")
        else:
            await message.answer(f"—Ä—ã–±–∞ —Å–æ—Ä–≤–∞–ª–∞—Å—å... —Ö–æ—á–µ—à—å –µ—â–µ? ", reply_markup=reply_kb)
            await message.answer(f"üò≠")
    if lvl_fishing_rod == 2:
        if chance > 50:
            data['money'] += a1
            update_user_data(user_id)
            await message.answer(f"—Ç—ã –ø–æ–π–º–∞–ª —Ä—ã–±—É {a}, –∑–∞ –Ω–µ–µ —Ç—ã –ø–æ–ª—É—á–∏—à—å - {a1} –º–æ–Ω–µ—Ç . –¢–≤–æ–π –±–∞–ª–∞–Ω—Å - {data['money']} ", reply_markup=reply_kb)
            await message.answer(f"üòä")
        else:
            await message.answer(f"—Ä—ã–±–∞ —Å–æ—Ä–≤–∞–ª–∞—Å—å... —Ö–æ—á–µ—à—å –µ—â–µ? ", reply_markup=reply_kb)
            await message.answer(f"üò≠")
    if lvl_fishing_rod == 3:
        if chance > 60:
            data['money'] += a1
            update_user_data(user_id)
            await message.answer(f"—Ç—ã –ø–æ–π–º–∞–ª —Ä—ã–±—É {a}, –∑–∞ –Ω–µ–µ —Ç—ã –ø–æ–ª—É—á–∏—à—å - {a1} –º–æ–Ω–µ—Ç . –¢–≤–æ–π –±–∞–ª–∞–Ω—Å - {data['money']} ", reply_markup=reply_kb)
            await message.answer(f"üòä")
        else:
            await message.answer(f"—Ä—ã–±–∞ —Å–æ—Ä–≤–∞–ª–∞—Å—å... —Ö–æ—á–µ—à—å –µ—â–µ? ", reply_markup=reply_kb)
            await message.answer(f"üò≠")
    if lvl_fishing_rod == 4:
        if chance > 70:
            data['money'] += a1
            update_user_data(user_id)
            await message.answer(f"—Ç—ã –ø–æ–π–º–∞–ª —Ä—ã–±—É {a}, –∑–∞ –Ω–µ–µ —Ç—ã –ø–æ–ª—É—á–∏—à—å - {a1} –º–æ–Ω–µ—Ç . –¢–≤–æ–π –±–∞–ª–∞–Ω—Å - {data['money']} ", reply_markup=reply_kb)
            await message.answer(f"üòä")
        else:
            await message.answer(f"—Ä—ã–±–∞ —Å–æ—Ä–≤–∞–ª–∞—Å—å... —Ö–æ—á–µ—à—å –µ—â–µ? ", reply_markup=reply_kb)
            await message.answer(f"üò≠")
    if lvl_fishing_rod == 5:
        if chance > 90:
            data['money'] += a1
            update_user_data(user_id)
            await message.answer(f"—Ç—ã –ø–æ–π–º–∞–ª —Ä—ã–±—É {a}, –∑–∞ –Ω–µ–µ —Ç—ã –ø–æ–ª—É—á–∏—à—å - {a1} –º–æ–Ω–µ—Ç . –¢–≤–æ–π –±–∞–ª–∞–Ω—Å - {data['money']} ", reply_markup=reply_kb)
            await message.answer(f"üòä")
        else:
            await message.answer(f"—Ä—ã–±–∞ —Å–æ—Ä–≤–∞–ª–∞—Å—å... —Ö–æ—á–µ—à—å –µ—â–µ? ", reply_markup=reply_kb)
            await message.answer(f"üò≠")

@command_router.message(F.text == "–æ–±–Ω–æ–≤–∏—Ç—å —É–¥–æ—á–∫—É")
async def up_rod(message:  types.Message):
    user_id = message.from_user.id
    data = get_user_data(user_id)
    if data['lvl_rod'] == 1:
        if data['money'] > 100:
            data['lvl_rod'] = 2
            data['money'] -= 100
            update_user_data(user_id)
            await message.answer_photo(photo="https://www.atbaits.com/img/20151021_1210192058.jpg", caption = "–≤—ã –æ–±–Ω–æ–≤–∏–ª–∏ —É–¥–æ—á–∫—É")
        else:
            await message.answer(f"–Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–æ–Ω–µ—Ç")
    elif data['lvl_rod'] == 2:
        if data['money'] > 300:
            data['lvl_rod'] = 3
            data['money'] -= 300
            update_user_data(user_id)
            await message.answer_photo(photo="https://www.atbaits.com/img/20151021_1210192058.jpg", caption = "–≤—ã –æ–±–Ω–æ–≤–∏–ª–∏ —É–¥–æ—á–∫—É")
        elif data['money'] < 300:
            await message.answer(f"–Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–æ–Ω–µ—Ç")
    elif data['lvl_rod'] == 3:
        if data['money'] > 500:
            data['lvl_rod'] = 4
            data['money'] -= 500
            update_user_data(user_id)
            await message.answer_photo(photo="https://www.atbaits.com/img/20151021_1210192058.jpg", caption = "–≤—ã –æ–±–Ω–æ–≤–∏–ª–∏ —É–¥–æ—á–∫—É")
        elif data['money'] < 500:
            await message.answer(f"–Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–æ–Ω–µ—Ç")
    elif data['lvl_rod'] == 4:
        if data['money'] > 1000:
            data['lvl_rod'] = 5
            data['money'] -= 1000
            update_user_data(user_id)
            await message.answer_photo(photo="https://www.atbaits.com/img/20151021_1210192058.jpg", caption = "–≤—ã –æ–±–Ω–æ–≤–∏–ª–∏ —É–¥–æ—á–∫—É")
        elif data['money'] < 1000:
            await message.answer(f"–Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–æ–Ω–µ—Ç")

@command_router.message(F.text == "–æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–º–∞–Ω–∫—É")
async def up_bait(message:  types.Message):
    user_id = message.from_user.id
    data = get_user_data(user_id)
    if data['lvl_bait'] == 1:
        if data['money'] > 50:
            data['lvl_bait'] = 2
            data['money'] -= 50
            update_user_data(user_id)
            listok.pop(0)
            listok.append("—â—É–∫–∞")
            await message.answer_photo(photo="https://avatars.mds.yandex.net/i?id=59013680d8b630a604e89fca6a960395_l-9599239-images-thumbs&n=13", caption = "–≤—ã –æ–±–Ω–æ–≤–∏–ª–∏ –ø—Ä–∏–º–∞–Ω–∫—É")
        elif data['money'] < 50:
            await message.answer(f"–Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–æ–Ω–µ—Ç")
    elif data['lvl_bait'] == 2:
        if data['money'] > 200:
            data['lvl_bait'] = 3
            data['money'] -= 200
            update_user_data(user_id)
            listok.pop(0)
            listok.append("—Å–æ–º")
            await message.answer_photo(photo="https://avatars.mds.yandex.net/i?id=59013680d8b630a604e89fca6a960395_l-9599239-images-thumbs&n=13", caption = "–≤—ã –æ–±–Ω–æ–≤–∏–ª–∏ –ø—Ä–∏–º–∞–Ω–∫—É")
        elif data['money'] < 200:
            await message.answer(f"–Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–æ–Ω–µ—Ç")
    elif data['lvl_bait'] == 3:
        if data['money'] > 600:
            data['lvl_bait'] = 4
            data['money'] -= 600
            update_user_data(user_id)
            listok.pop(0)
            listok.append("—Å–µ–º–≥–∞")
            await message.answer_photo(photo="https://avatars.mds.yandex.net/i?id=59013680d8b630a604e89fca6a960395_l-9599239-images-thumbs&n=13", caption = "–≤—ã –æ–±–Ω–æ–≤–∏–ª–∏ –ø—Ä–∏–º–∞–Ω–∫—É")
        elif data['money'] < 600:
            await message.answer(f"–Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–æ–Ω–µ—Ç")
    elif data['lvl_bait'] == 4:
        if data['money'] > 800:
            data['lvl_bait'] = 5
            data['money'] -= 800
            update_user_data(user_id)
            listok.pop(0)
            listok.append("—Ç—É–Ω–µ—Ü")
            await message.answer_photo(photo="https://avatars.mds.yandex.net/i?id=59013680d8b630a604e89fca6a960395_l-9599239-images-thumbs&n=13", caption = "–≤—ã –æ–±–Ω–æ–≤–∏–ª–∏ –ø—Ä–∏–º–∞–Ω–∫—É")
        elif data['money'] < 800:
            await message.answer(f"–Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–æ–Ω–µ—Ç")

@command_router.message(F.text == "–ø—Ä–æ—Ñ–∏–ª—å")
async def profile(message:  types.Message):
    user_id = message.from_user.id
    data = get_user_data(user_id)
    await message.answer(f"–∫–æ–ª-–≤–æ –º–æ–Ω–µ—Ç - {data['money']}, —É—Ä–æ–≤–µ–Ω—å —É–¥–æ—á–∫–∏ - {data['lvl_rod']}, —É—Ä–æ–≤–µ–Ω—å –ø—Ä–∏–º–∞–Ω–∫–∏ - {data['lvl_bait']}")

@command_router.message(F.text == "—Ü–µ–Ω—ã")
async def profile(message:  types.Message):
    await message.answer(f"—É–¥–æ—á–∫–∏ –∏–ª–∏ –ø—Ä–∏–º–∞–Ω–∫–∏?",reply_markup=reply_key)

@command_router.message(F.text == "–£–¥–æ—á–∫–∏")
async def profile(message:  types.Message):
    await message.answer(f"—É–¥–æ—á–∫–∞ 2 —É—Ä–æ–≤–Ω—è —Å—Ç–æ–∏—Ç {fishing_rod[2]} \n—É–¥–æ—á–∫–∞ 3 —É—Ä–æ–≤–Ω—è —Å—Ç–æ–∏—Ç {fishing_rod[3]} \n—É–¥–æ—á–∫–∞ 4 —É—Ä–æ–≤–Ω—è —Å—Ç–æ–∏—Ç {fishing_rod[4]} \n—É–¥–æ—á–∫–∞ 5 —É—Ä–æ–≤–Ω—è —Å—Ç–æ–∏—Ç{fishing_rod[5]}",reply_markup=reply_kb)

@command_router.message(F.text == "–ü—Ä–∏–º–∞–Ω–∫–∏")
async def profile(message:  types.Message):
    await message.answer(f"–ø—Ä–∏–º–∞–Ω–∫–∞ 2 —É—Ä–æ–≤–Ω—è —Å—Ç–æ–∏—Ç {fishing_bait[2]} \n–ø—Ä–∏–º–∞–Ω–∫–∞ 3 —É—Ä–æ–≤–Ω—è —Å—Ç–æ–∏—Ç {fishing_bait[3]} \n–ø—Ä–∏–º–∞–Ω–∫–∞ 4 —É—Ä–æ–≤–Ω—è —Å—Ç–æ–∏—Ç {fishing_bait[4]} \n–ø—Ä–∏–º–∞–Ω–∫–∞ 5 —É—Ä–æ–≤–Ω—è —Å—Ç–æ–∏—Ç{fishing_rod[5]}",reply_markup=reply_kb)

@command_router.message(F.text == "–ù–∞–∑–∞–¥")
async def profile(message:  types.Message):
    await message.answer(text = "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=reply_kb)




























